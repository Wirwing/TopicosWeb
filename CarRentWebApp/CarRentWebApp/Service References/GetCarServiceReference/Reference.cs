//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CarRentWebApp.GetCarServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CarComplexType", Namespace="http://xml.netbeans.org/schema/CarRentalSchema")]
    [System.SerializableAttribute()]
    public partial class CarComplexType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int idField;
        
        private string typeField;
        
        private string brandField;
        
        private string transmissionField;
        
        private int numberOfPeopleField;
        
        private int numberOfBaggageField;
        
        private double pricePerDayField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int id {
            get {
                return this.idField;
            }
            set {
                if ((this.idField.Equals(value) != true)) {
                    this.idField = value;
                    this.RaisePropertyChanged("id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false)]
        public string type {
            get {
                return this.typeField;
            }
            set {
                if ((object.ReferenceEquals(this.typeField, value) != true)) {
                    this.typeField = value;
                    this.RaisePropertyChanged("type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=2)]
        public string brand {
            get {
                return this.brandField;
            }
            set {
                if ((object.ReferenceEquals(this.brandField, value) != true)) {
                    this.brandField = value;
                    this.RaisePropertyChanged("brand");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, EmitDefaultValue=false, Order=3)]
        public string transmission {
            get {
                return this.transmissionField;
            }
            set {
                if ((object.ReferenceEquals(this.transmissionField, value) != true)) {
                    this.transmissionField = value;
                    this.RaisePropertyChanged("transmission");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=4)]
        public int numberOfPeople {
            get {
                return this.numberOfPeopleField;
            }
            set {
                if ((this.numberOfPeopleField.Equals(value) != true)) {
                    this.numberOfPeopleField = value;
                    this.RaisePropertyChanged("numberOfPeople");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=5)]
        public int numberOfBaggage {
            get {
                return this.numberOfBaggageField;
            }
            set {
                if ((this.numberOfBaggageField.Equals(value) != true)) {
                    this.numberOfBaggageField = value;
                    this.RaisePropertyChanged("numberOfBaggage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=6)]
        public double pricePerDay {
            get {
                return this.pricePerDayField;
            }
            set {
                if ((this.pricePerDayField.Equals(value) != true)) {
                    this.pricePerDayField = value;
                    this.RaisePropertyChanged("pricePerDay");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://j2ee.netbeans.org/wsdl/CarRentalBPEL/src/GetCarWSDL", ConfigurationName="GetCarServiceReference.GetCarWSDLPortType")]
    public interface GetCarWSDLPortType {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.DataContractFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="car")]
        CarRentWebApp.GetCarServiceReference.CarComplexType GetCarWSDLOperation(int carId, string getCarProviderId);
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [return: System.ServiceModel.MessageParameterAttribute(Name="car")]
        System.Threading.Tasks.Task<CarRentWebApp.GetCarServiceReference.CarComplexType> GetCarWSDLOperationAsync(int carId, string getCarProviderId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GetCarWSDLPortTypeChannel : CarRentWebApp.GetCarServiceReference.GetCarWSDLPortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCarWSDLPortTypeClient : System.ServiceModel.ClientBase<CarRentWebApp.GetCarServiceReference.GetCarWSDLPortType>, CarRentWebApp.GetCarServiceReference.GetCarWSDLPortType {
        
        public GetCarWSDLPortTypeClient() {
        }
        
        public GetCarWSDLPortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GetCarWSDLPortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetCarWSDLPortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GetCarWSDLPortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CarRentWebApp.GetCarServiceReference.CarComplexType GetCarWSDLOperation(int carId, string getCarProviderId) {
            return base.Channel.GetCarWSDLOperation(carId, getCarProviderId);
        }
        
        public System.Threading.Tasks.Task<CarRentWebApp.GetCarServiceReference.CarComplexType> GetCarWSDLOperationAsync(int carId, string getCarProviderId) {
            return base.Channel.GetCarWSDLOperationAsync(carId, getCarProviderId);
        }
    }
}
